name: tryout

on:
    push:
        branches:
            - '**'
jobs:
    build:
        permissions:
            checks: write
            pull-requests: write
            contents: read
        environment: CIRelease
        runs-on: ubuntu-latest
        steps:
            - name: Setup
              uses: IntershopCommunicationsAG/.github/actions/gradle-plugin-setup@v0.4
            - name: Get the version
              id: get_version
              run: |
                echo GITHUB_REF=${GITHUB_REF_NAME}
                echo "PROJECT_VERSION=${GITHUB_REF_NAME/refs\/tags\//}" >> "$GITHUB_ENV"
            - name: Print the version
              run: |
                  echo PROJECT_VERSION=${PROJECT_VERSION}
            - name: Install gpg secret key
              shell: bash
              env:
                  SIGNINGFILE: ${{ secrets.SIGNINGFILE }}
              run: |
                  cat <(echo -e "$SIGNINGFILE") | gpg --batch --import
                  gpg --list-secret-keys --keyid-format LONG
            - name: Export gpg file
              shell: bash
              env:
                  SIGNINGKEYID: ${{ secrets.SIGNINGKEYID }}
                  SIGNINGPASSWORD: ${{ secrets.SIGNINGPASSWORD }}
              run: |
                  gpg --batch --passphrase="$SIGNINGPASSWORD" --pinentry-mode loopback --export-secret-keys $SIGNINGKEYID > $HOME/.gradle/secrets.gpg
            - name: Create gradle properties
              shell: bash
              env:
                  APIKEY: ${{ secrets.APIKEY }}
                  APISECRET: ${{ secrets.APISECRET }}
                  SIGNINGKEYID: ${{ secrets.SIGNINGKEYID }}
                  SIGNINGPASSWORD: ${{ secrets.SIGNINGPASSWORD }}
                  SONATYPEUSER: ${{ secrets.SONATYPEUSER }}
                  SONATYPEPASSWORD: ${{ secrets.SONATYPEPASSWORD }}
              run: echo -e "gradle.publish.key=$APIKEY\ngradle.publish.secret=$APISECRET\nsigning.keyId=$SIGNINGKEYID\nsigning.password=$SIGNINGPASSWORD\nsigning.secretKeyRingFile=$HOME/.gradle/secrets.gpg\nsonatypeUsername=$SONATYPEUSER\nsonatypePassword=$SONATYPEPASSWORD" > $HOME/.gradle/gradle.properties
            - name: Run gradle release
              shell: bash
              run: ./gradlew -Pversion=${{ github.ref_name }} pTML -s --scan
            - name: Post Build
              shell: bash
              run: rm -f $HOME/.gradle/gradle.properties
